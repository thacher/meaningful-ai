# ==========================================
# Meaningful AI - Environment Configuration
# ==========================================

# ==========================================
# AI Service Configuration
# ==========================================
# OpenAI API Key (Primary service)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here

# Anthropic API Key (Fallback service - optional but recommended)
# Get your API key from: https://console.anthropic.com/
# This will be used automatically if OpenAI times out or hits rate limits
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# ==========================================
# Supabase Configuration (OPTIONAL)
# ==========================================
# The app works perfectly with local storage!
# Only set these if you want cloud persistence
# Get from: https://supabase.com/dashboard

# Your Supabase project URL
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co

# Your Supabase anon/public key
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# ==========================================
# Admin Configuration
# ==========================================
# Password to access the admin dashboard at /admin
# CHANGE THIS IN PRODUCTION!
ADMIN_PASSWORD=admin123

# ==========================================
# App Configuration
# ==========================================
# Base URL for your application
NEXT_PUBLIC_APP_URL=http://localhost:3000

# ==========================================
# Setup Instructions
# ==========================================
# 1. Copy this file to .env.local
# 2. Add your OpenAI API key (required for AI features)
# 3. Optionally add Anthropic API key for automatic fallback when OpenAI fails
# 4. Optionally add Supabase credentials for cloud storage
# 5. Change the admin password for security
# 6. Run: npm run dev
# 
# The app works immediately with local storage - no database required!
# 
# Note: Adding an Anthropic API key provides automatic fallback when OpenAI
# experiences timeouts or rate limits, ensuring more reliable AI responses.
